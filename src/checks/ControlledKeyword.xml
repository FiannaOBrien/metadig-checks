<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
   <id>ControlledKeyword.1</id>
   <name>ControlledKeyword</name>
   <description>Checks to see if at least one keyword from a controlled vocabulary exists.</description>
   <type>Findable</type>
   <level>OPTIONAL</level>
   <environment>python</environment>
   <code><![CDATA[
def call():
  import metadig.variable as mvar
  import java.util.ArrayList as ArrayList
  
  global output
  global status

  # First check if a vocabulary is present
  # The variable keywordVocabularyPresent should be passed from the engine as a boolean
  if ('vocabularyPresent' in globals() and vocabularyPresent is not None and vocabularyPresent):
    status = "SUCCESS"
  else:
    output = "A keyword from a vocabulary is not present"
    status = "FAILURE"
    return False
    
  # A vocabulary exists, so now check that there is at least one that is none-blank and 
  # not "None".

  # A single value or multiple values can be returned from the XPath selector
  # LTER sometimes uses the keywordThesaurus name of "None"
  if (isinstance(vocabulary, unicode) or isinstance(vocabulary, str)):
    if(vocabulary.lower() == "none" or mvar.isBlank(vocabulary)):
      output = "A keyword from a vocabulary is not present"
      status = "FAILURE"
      return False
    else:
      output = "A keyword from vocabulary '{}' is present".format(vocabulary).strip()
      status = "SUCCESS"
      return True
  elif (isinstance(vocabulary, ArrayList)):
    # Return as soon as we find a valid vocabulary
    for i in range(0, len(vocabulary)):
      thisVocab = vocabulary.get(i).strip()
      # This one is not valid, check next
      if(mvar.isBlank(thisVocab) or thisVocab.lower == "None"):
        continue
      else:
        output = "A keyword from vocabulary '{}' is present".format(thisVocab).strip()
        status = "SUCCESS"
        return True
        
    # No valid vocabulary found
    output = "A keyword from a vocabulary is not present"
    status = "FAILURE"
    return False
        
      ]]></code>
      
   <selector>
      <name>vocabularyPresent</name>
      <xpath>boolean(
         /*/identificationInfo/*/descriptiveKeywords/MD_Keywords/keyword/../thesaurusName/CI_Citation/title or
         /eml/*/keywordSet/keyword/../keywordThesaurus or
         /resource/subjects/subject[@subjectScheme])
         </xpath>
   </selector>
   <selector>
      <name>vocabulary</name>
      <xpath>/*/identificationInfo/*/descriptiveKeywords/MD_Keywords/keyword/../thesaurusName/CI_Citation/title//text() |
         /eml/*/keywordSet/keyword/../keywordThesaurus//text() |
         /resource/subjects/subject[@subjectScheme]//text()
         </xpath>
   </selector>
   
   <dialect>
      <name>DataCite 3.1, 4.x</name>
      <xpath>boolean(/*[local-name() = 'resource'])</xpath>
   </dialect>
   <dialect>
      <name>Dryad Data Package and Data File Modules</name>
      <xpath>boolean(/*[local-name() = 'DryadDataFile' or local-name() = 'DryadDataPackage'])</xpath>
   </dialect>
   <dialect>
      <name>Ecological Metadata Language</name>
      <xpath>boolean(/*[local-name() = 'eml'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115 and ISO 19115-2 / ISO 19139 and ISO 19139-2</name>
      <xpath>boolean(/*[local-name() = 'MI_Metadata' or local-name() = 'MD_Metadata'])</xpath>
   </dialect>
   <dialect>
      <name>ISO 19115-1 / ISO 19115-3</name>
      <xpath>boolean(/*[local-name() = 'MD_Metadata'])</xpath>
   </dialect>
</mdq:check>
